
plugins {
    id 'java'
    id 'application'
    id "com.gorylenko.gradle-git-properties" version "2.2.2"
}

description = ""
version = '2020.05.3-SNAPSHOT'

ext {
    copyYears = "2004-${new Date().format('yyyy')}"
}

dependencies {
    // This dependency is used by the application.
    implementation name: 'libimc'
    implementation name: 'libMsgSender'

    implementation name: 'aisparser-2.0.0'
    implementation name: 'jssc' //dependency of aisparser
    //implementation 'org.scream3r:jssc:2.8.0'


    implementation name: 'ais-contact-manager-1.0'

    //implementation 'org.apache.xmlgraphics:batik-transcoder:1.7' //1.13 was from fop
    //implementation 'org.apache.xmlgraphics:batik-all:1.9.1' //1.13 was 1.7.1
    implementation 'org.apache.xmlgraphics:batik-gui-util:1.7' //1.13


    implementation name: 'charsets-zip' // for zip, probably not needed anymore
    implementation 'commons-cli:commons-cli:1.2' //1.4
    implementation 'commons-codec:commons-codec:1.9' //1.14
    implementation 'commons-collections:commons-collections:3.2.1' //3.2.2
    implementation 'org.apache.commons:commons-compress:1.10' //1.20
    implementation 'commons-configuration:commons-configuration:1.10'
    implementation 'org.apache.commons:commons-email:1.3.2' //1.5
    implementation 'commons-httpclient:commons-httpclient:3.1'
    implementation 'commons-io:commons-io:2.4' //2.6
    implementation 'org.apache.commons:commons-lang3:3.2.1' //3.10
    implementation 'commons-lang:commons-lang:2.6'
    implementation 'commons-logging:commons-logging:1.2'
    implementation 'commons-net:commons-net:3.3' //3.6

    implementation 'dom4j:dom4j:1.6.1'
    implementation 'jaxen:jaxen:1.1.1' //1.2.0

    implementation 'com.firebase:firebase-client-jvm:2.0.0' //2.5.2
    implementation 'org.apache.xmlgraphics:fop:0.95'
    //implementation group: 'foxtrot', name: 'foxtrot', version: '3.0', ext: 'pom'
    implementation 'foxtrot.foxtrot:foxtrot:3.0' //4.0

    implementation 'org.graphstream:gs-ui:1.3'
    // gdal 1.8.2
    implementation name: 'gdal'
    implementation 'org.dinopolis.gpstool:gpsinput:0.5.3'
    implementation name: 'gpxparser'
    implementation 'org.codehaus.groovy:groovy:2.5.4' //3.0.3
    implementation 'com.google.guava:guava:17.0' //28.2-jre
    implementation 'com.google.code.gson:gson:2.2.2' //2.8.6

    implementation 'org.apache.httpcomponents:httpclient:4.5.1' //4.5.12

    implementation 'org.imgscalr:imgscalr-lib:4.2'
    implementation 'org.ini4j:ini4j:0.5.2' //0.5.4
    implementation 'com.lowagie:itext:2.1.5'

    //implementation 'java3d:j3d-core:1.3.1' // to delete
    implementation name: 'j3dcore'
    //implementation 'java3d:j3d-core-utils:1.3.1' // to delete
    implementation name: 'j3dutils'
    implementation name: 'StarfireExt' // to delete
    implementation name: 'vecmath' // to delete
    implementation name: 'wrl/j3d-vrml97' // to delete

    implementation 'gov.nist.math:jama:1.0.2' //1.0.3
    implementation 'de.micromata.jak:JavaAPIforKml:2.2.0' //2.2.1
    implementation 'net.sourceforge.javacsv:javacsv:2.0'
    implementation 'org.javassist:javassist:3.18.0-GA' //3.27.0-GA
    implementation 'net.sf.jchart2d:jchart2d:3.3.2' // devia ser o 1.03
    implementation 'org.jfree:jcommon:1.0.24'
    implementation 'org.mortbay.jetty:jetty:6.0.2'
    implementation 'org.jfree:jfreechart:1.5.0'
    implementation 'com.jgoodies:jgoodies-looks:2.5.3' //2.7.0
    implementation 'com.jhlabs:filters:2.0.235-1' // don't know the orig version
    implementation 'net.java.jinput:jinput:2.0.9' // was not this and should be before 2.0.4
    implementation 'net.sourceforge.jmatio:jmatio:1.0'
    implementation 'javax.media:jmf:2.1.1e'
    implementation 'org.jogamp.jogl:jogl-all-main:2.0.2'
    implementation 'com.jcraft:jsch:0.1.53' //0.1.55
    implementation name: 'jtransform_thin' // from NOOA
    implementation 'net.sf.jung:jung2:2.0.1'
    implementation 'net.sf.jung:jung-api:2.0.1'
    implementation 'net.sf.jung:jung-algorithms:2.0.1'
    implementation 'net.sf.jung:jung-graph-impl:2.0.1'
    implementation 'net.sf.jung:jung-visualization:2.0.1'
    implementation 'org.swinglabs:jxlayer:3.0.2'
    
    //implementation 'org.jzy3d:jzy3d-api:0.9.1' //incompatible with used 0.9.0!, 1.0.2  
    implementation name: 'jogl2/gluegen'
    implementation name: 'jogl2/jogl-all'
    implementation name: 'jogl2/gluegen-rt'
    implementation name: 'jogl2/jogl-all-natives-linux-amd64'
    implementation name: 'jogl2/gluegen-rt-natives-linux-amd64'
    implementation name: 'jogl2/jogl-all-natives-linux-i586'
    implementation name: 'jogl2/gluegen-rt-natives-linux-i586'
    implementation name: 'jogl2/jogl-all-natives-macosx-universal'
    implementation name: 'jogl2/gluegen-rt-natives-macosx-universal'
    implementation name: 'jogl2/jogl-all-natives-windows-amd64'
    implementation name: 'jogl2/gluegen-rt-natives-windows-amd64'
    implementation name: 'jogl2/jogl-all-natives-windows-i586'
    implementation name: 'jogl2/gluegen-rt-natives-windows-i586'
    implementation name: 'jogl2/org.jzy3d-0.9'


    //implementation 'com.l2fprod.common:l2fprod-common-all:7.3.0'
    implementation name: 'l2fprod-common-all'
    implementation 'log4j:log4j:1.2.17'

    implementation 'net.sf.marineapi:marineapi:0.11.0'
    implementation 'com.drewnoakes:metadata-extractor:2.7.2' //2.13.0
    implementation 'com.miglayout:miglayout-swing:4.2' //5.2
    implementation 'com.eclipsesource.minimal-json:minimal-json:0.9.4' //0.9.5

    //implementation  'edu.ucar:netcdfAll:5.3.2' //used 5.2 on the current develop, here was 4.6.10
    implementation name: 'netcdfAll-4.6.10'

    implementation name: 'opencv-2.4.11'
    implementation 'oro:oro:2.0.8' // devia ser 0 2.1-dev

    implementation name: 'percentlayout'
    implementation name: 'PSEngine' // Europa planner
    implementation name: 'PSEngine-javadoc'

    implementation 'org.reflections:reflections:0.9.9' //was 0.9.9-RC1, 0.9.12
    implementation 'org.mozilla:rhino:1.7R4' //1.7.12

    implementation 'com.fifesoft:rsyntaxtextarea:2.5.8' //3.1.0
    implementation 'com.fifesoft:autocomplete:2.5.8' //3.1.0
    implementation 'com.fifesoft:languagesupport:2.5.8' //3.1.0
    
    //implementation 'org.rxtx:rxtxcomm:2.0-7pre1'
    implementation name: 'RXTXcomm'

    implementation 'org.apache.sanselan:sanselan:0.97-incubator'
    implementation 'org.swinglabs.swingx:swingx-all:1.6.4'
    implementation name: 'sqlitejdbc-v056'
    implementation name: 'standby'
    implementation 'org.swinglabs.swingx:swingx-all:1.6.4' //1.6.5-1

    implementation name: 'speech/cmudict04'
    implementation name: 'speech/cmu_time_awb'
    implementation name: 'speech/cmu_us_kal'
    implementation name: 'speech/freetts'
    implementation name: 'speech/cmulex'
    implementation name: 'speech/cmutimelex'
    implementation name: 'speech/en_us'
    implementation name: 'speech/jsapi'

    implementation name: 'vtk'

    implementation name: 'wms'

    implementation 'xerces:xercesImpl:2.7.1' //2.12.0
    //implementation 'org.knowm.xchart:xchart-parent:3.5.1'
    implementation name: 'xchart-3.5.1'
    implementation name: 'xj3d/xj3d-all'
    implementation 'com.adobe.xmp:xmpcore:5.1.2' //6.1.10
    implementation 'xuggle:xuggle-xuggler:5.4'

    implementation 'com.google.zxing:javase:3.2.1' //3.4.0

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'

    runtimeOnly fileTree(dir: 'plugins', include: '*.jar')
}

apply plugin: 'java'
compileJava.options.encoding = 'UTF-8'

apply plugin: "com.gorylenko.gradle-git-properties"

sourceSets {
    main {
        java {
	        srcDirs = ['src']
        }
        resources {
           srcDirs = ['src']
        }
    }
}

allprojects {
    version = "$rootProject.version"

    repositories {
        mavenCentral()
        flatDir {
        dirs 'lib'
        }
        maven {
            url 'https://artifacts.unidata.ucar.edu/content/repositories/unidata-releases/'
            url 'https://maven.jzy3d.org/releases/'
        }
    }

    apply plugin: 'java'
    compileJava.options.encoding = 'UTF-8'
    
    apply plugin: "com.gorylenko.gradle-git-properties"
    

    processResources {
        from (rootProject.projectDir) {
            include 'LICENSE.md'
        }
    }

    jar {
        manifest {
            attributes(
                'Specification-Title': rootProject.name.capitalize(),
                'Specification-Version': "$project.version, ${-> project.ext.gitProps['git.commit.time']}",
                'Specification-Vendor': 'FEUP   USTL/LSTS (http://www.fe.up.pt/lsts)  Neptus (http://whale.fe.up.pt/neptus)',
                'Implementation-Title': project.name,
                'Implementation-Version': project.version,
                'Implementation-Vendor': 'FEUP  USTL/LSTS (http://www.fe.up.pt/lsts)',
                'Build-Revision': "${rootProject.name}-${project.version}-git#${-> project.ext.gitProps['git.commit.id.describe']}",
                'Built-By': "${System.properties['user.name']}",
                'Built-On': "${new Date()}",
                )
        }
        archiveVersion = ''
    }

    gitProperties {
        extProperty = 'gitProps'
        failOnNoGitDirectory = false

        dateFormat = "yyyy-MM-dd'T'HH:mmZ"
        dateFormatTimeZone = "UTC"

        gitPropertiesName = "git.info"
        keys = ['git.branch',
                'git.build.version',
                'git.closest.tag.commit.count',
                'git.closest.tag.name',
                'git.commit.id',
                'git.commit.id.abbrev',
                'git.commit.id.describe',
                'git.commit.time',
                'git.dirty',
                'git.remote.origin.url',
                'git.tags',
                ]
    }
    generateGitProperties.outputs.upToDateWhen { false }
}

subprojects {
    sourceSets {
        main {
            java {
                srcDirs += ['java', '.']
                exclude 'lib'
                exclude '**/*.jar'
            }
            resources {
                srcDirs += ['resources', '.']
                exclude 'lib'
                exclude '**/*.jar'
            }
        }
    }

    processResources {
        outputs.upToDateWhen { false }
        from('.'){
            include 'plugins.lst'
            filter{ it.replaceAll('@DATE@', "${new Date().format('yyyy-MM-dd')}") }
            filter{ it.replaceAll('@TIME@', "${new Date().format('HH:mm Z')}") }
            filter{ it.replaceAll('@COMPILED BY@', "${System.properties['user.name']}") }
            filter{ it.replaceAll('@LEGAL_COPY@', "$rootProject.ext.copyYears") }
        }
    }

    dependencies {
        implementation fileTree(dir: 'lib', include: '*.jar')
        implementation fileTree(dir: 'libs', include: '*.jar')
        implementation fileTree(dir: '.', include: '*.jar')
    }

    buildDir = file("$rootProject.buildDir/plugins/$project.name")

    jar {
        // manifest {
        //     attributes += ['Main-Class': 'pt.lsts.neptus.loader.NeptusMain',]
        // }
        archiveVersion = ''
        destinationDirectory = file("$rootDir/plugins")

        from sourceSets.main.output

        dependsOn configurations.runtimeClasspath
        from {
            configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
        }
    }
}

jar {
    manifest {
        attributes += 
            ['Main-Class': 'pt.lsts.neptus.loader.NeptusMain',]
    }
    archiveVersion = ''
    destinationDirectory = file("$rootDir/bin")
}

application {
    mainClass = 'pt.lsts.neptus.loader.NeptusMain'
    // https://dzone.com/articles/7-jvm-arguments-of-highly-effective-applications-1?edition=590292&utm_source=Weekly%20Digest&utm_medium=email&utm_campaign=Weekly%20Digest%202020-04-01
    applicationDefaultJvmArgs = [
        '-Xms10m',
        '-Xmx2g',
        '-XX:MaxMetaspaceSize=512m',
        
        '-XX:+UseG1GC', //for Java 8+
        //'-XX:+UseZGC', //for Java 11+
        
        '-XX:+PrintGCDetails', '-XX:+PrintGCDateStamps', "-Xloggc:./log", //for Java 8-
        //"-Xlog:gc*:file=./log", //for Java 9+
        
        '-XX:+HeapDumpOnOutOfMemoryError', "-XX:HeapDumpPath=./log/heap-dump.hprof",
        
        '-Xss256k',
        ]
}



configure(subprojects.findAll { it.name != 'neptus' }) {
    dependencies {
        compileOnly rootProject
        compileOnly rootProject.sourceSets.main.runtimeClasspath
    }
}

clean {
    // delete fileTree(dir: "$rootDir/bin" , include: '**/*.jar')
    // delete fileTree(dir: "$rootDir/plugins" , include: '**/*.jar')
}

task cleanEclipseFiles {
    // delete fileTree(dir: "$rootDir" , include: '**/.project')
    // delete fileTree(dir: "$rootDir" , include: '**/.classpath')
    // delete fileTree(dir: "$rootDir" , include: '**/.settings')
}

task cleanIdeaFiles {
    delete fileTree(dir: "$rootDir" , include: '**/.idea')
}

task cleanVSCodeFiles {
    delete fileTree(dir: "$rootDir" , include: '.vscode')
}
